@model LogsModel
@using Fancyauth.Model
@{
    ViewBag.Title = "Logs";
}
<div class="row">
    <h1>Logs</h1>
    
    <form asp-controller="Logs" asp-action="Index" method="post" class="form-horizontal" role="form">
        <h4>Show logs</h4>
        <hr />
        <div asp-validation-summary="ValidationSummary.ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="From" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="From" type="datetime" class="form-control" />
                <span asp-validation-for="From" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="To" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="To" class="form-control" />
                <span asp-validation-for="To" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Filter" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Filter" class="form-control" />
                <span asp-validation-for="Filter" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Show" class="btn btn-default" />
            </div>
        </div>
    </form>
</div>
<div class="row">
    <div>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Who</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var gentry in Model.Logs.GroupBy(x => x.Log.When.Date))
                {
                    @foreach (var entry in gentry.Select((x, idx) => new { x.Log, x.Who, idx }))
                    {
                        var connected = entry.Log as LogEntry.Connected;
                        var disconnected = entry.Log as LogEntry.Disconnected;
                        var chat = entry.Log as LogEntry.ChatMessage;

                        <tr>
                            @if (entry.idx == 0)
                            {
                                <td rowspan="@gentry.Count()">@entry.Log.When.ToShortDateString()</td>
                            }
                            <td>@entry.Log.When.ToShortTimeString()</td>
                            @if (connected != null)
                            {
                                <td colspan="2">@entry.Who connected</td>
                            }
                            else if (disconnected != null)
                            {
                                <td colspan="2">@entry.Who disconnected</td>
                            }
                            else if (chat != null)
                            {
                                <td>@entry.Who</td>
                                <td style="overflow: hidden;">@Html.Sanitized(chat.Message)</td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>